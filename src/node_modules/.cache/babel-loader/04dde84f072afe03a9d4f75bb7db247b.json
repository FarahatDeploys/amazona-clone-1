{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartConstant\";\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cart.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cart.cartItems.map(x => x.product === existItem ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cart.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/GMC/ECommerce_Project/progress/trial1.16/trial1.4/frontend/src/reducers/cartReducer.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","cart","find","x","product","map"],"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA8B;AAAA,MAAXC,MAAW;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,aAAL;AACE,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACO,IAAN,CAAWN,SAAX,CAAqBO,IAArB,CACfC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OADV,CAAlB;;AAGA,UAAIJ,SAAJ,EAAe;AACb,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACO,IAAN,CAAWN,SAAX,CAAqBU,GAArB,CAA0BF,CAAD,IAClCA,CAAC,CAACC,OAAF,KAAcJ,SAAd,GAA0BF,IAA1B,GAAiCK,CADxB;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGT,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACO,IAAN,CAAWN,SAAf,EAA0BG,IAA1B;AAFN,SAAP;AAID;;AACH;AACE,aAAOJ,KAAP;AApBJ;AAsBD,CAvBM","sourcesContent":["import { CART_ADD_ITEM } from \"../constants/cartConstant\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existItem = state.cart.cartItems.find(\r\n        (x) => x.product === item.product\r\n      );\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cart.cartItems.map((x) =>\r\n            x.product === existItem ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cart.cartItems, item],\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}