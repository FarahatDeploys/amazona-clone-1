{"ast":null,"code":"import data from \"./data\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { compose, createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport { productDetailsReducer, productListReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\n  }\n}; // const dataReducer = createSlice({\n//   name: \"datareducers\",\n//   initialState,\n//   reducers: {\n//     datareducer: (state, action) => {\n//       return data.products;\n//     },\n//   },\n// });\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  prodcutDetails: productDetailsReducer,\n  cart: cartReducer\n}); // const store = configureStore({\n//   reducer: dataReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       thunk,\n//     }),\n// });\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/GMC/ECommerce_Project/starting points/trial1.15/trial1.4/frontend/src/store.js"],"names":["data","configureStore","createSlice","compose","createStore","applyMiddleware","thunk","combineReducers","productDetailsReducer","productListReducer","cartReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","reducer","productList","prodcutDetails","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,OAArC;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SACEC,qBADF,EAEEC,kBAFF,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,wBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP;AAHA;AADa,CAArB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMG,OAAO,GAAGX,eAAe,CAAC;AAC9BY,EAAAA,WAAW,EAAEV,kBADiB;AAE9BW,EAAAA,cAAc,EAAEZ,qBAFc;AAG9BI,EAAAA,IAAI,EAAEF;AAHwB,CAAD,CAA/B,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMW,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CpB,OAAvE;AACA,MAAMqB,KAAK,GAAGpB,WAAW,CACvBc,OADuB,EAEvBP,YAFuB,EAGvBU,eAAe,CAAChB,eAAe,CAACC,KAAD,CAAhB,CAHQ,CAAzB;AAKA,eAAekB,KAAf","sourcesContent":["import data from \"./data\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { compose, createStore } from \"redux\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  productDetailsReducer,\r\n  productListReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: localStorage.getItem(\"cartItems\")\r\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      : [],\r\n  },\r\n};\r\n// const dataReducer = createSlice({\r\n//   name: \"datareducers\",\r\n//   initialState,\r\n//   reducers: {\r\n//     datareducer: (state, action) => {\r\n//       return data.products;\r\n//     },\r\n//   },\r\n// });\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  prodcutDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n});\r\n// const store = configureStore({\r\n//   reducer: dataReducer,\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       thunk,\r\n//     }),\r\n// });\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}