{"ast":null,"code":"import data from \"./data\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { compose, createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nconst initialState = {}; // const dataReducer = createSlice({\n//   name: \"datareducers\",\n//   initialState,\n//   reducers: {\n//     datareducer: (state, action) => {\n//       return data.products;\n//     },\n//   },\n// });\n\nconst reducer = (state, action) => {\n  return {\n    product: data.products\n  };\n}; // const store = configureStore({\n//   reducer: dataReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       thunk,\n//     }),\n// });\n\n\nconst store = createStore(reducer, initialState);\nexport default store;","map":{"version":3,"sources":["E:/Temp For Projects/trial1.10/trial1.4/frontend/src/store.js"],"names":["data","configureStore","createSlice","compose","createStore","applyMiddleware","thunk","initialState","reducer","state","action","product","products","store"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,OAArC;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,MAAMC,YAAY,GAAG,EAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAO;AAAEC,IAAAA,OAAO,EAAEX,IAAI,CAACY;AAAhB,GAAP;AACD,CAFD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,KAAK,GAAGT,WAAW,CAACI,OAAD,EAAUD,YAAV,CAAzB;AACA,eAAeM,KAAf","sourcesContent":["import data from \"./data\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { compose, createStore } from \"redux\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nconst initialState = {};\r\n// const dataReducer = createSlice({\r\n//   name: \"datareducers\",\r\n//   initialState,\r\n//   reducers: {\r\n//     datareducer: (state, action) => {\r\n//       return data.products;\r\n//     },\r\n//   },\r\n// });\r\nconst reducer = (state, action) => {\r\n  return { product: data.products };\r\n};\r\n// const store = configureStore({\r\n//   reducer: dataReducer,\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       thunk,\r\n//     }),\r\n// });\r\nconst store = createStore(reducer, initialState);\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}