{"ast":null,"code":"import data from \"./data\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { compose } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nconst initialState = [];\nconst dataReducer = createSlice({\n  name: \"datareducers\",\n  initialState,\n  reducers: {\n    datareducer: (state, action) => {\n      return data.products;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: dataReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk\n  })\n});\nexport default store;","map":{"version":3,"sources":["E:/Temp For Projects/trial1.10/trial1.4/frontend/src/store.js"],"names":["data","configureStore","createSlice","compose","applyMiddleware","thunk","initialState","dataReducer","name","reducers","datareducer","state","action","products","store","reducer","middleware","getDefaultMiddleware"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,WAAW,GAAGL,WAAW,CAAC;AAC9BM,EAAAA,IAAI,EAAE,cADwB;AAE9BF,EAAAA,YAF8B;AAG9BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAOZ,IAAI,CAACa,QAAZ;AACD;AAHO;AAHoB,CAAD,CAA/B;AASA,MAAMC,KAAK,GAAGb,cAAc,CAAC;AAC3Bc,EAAAA,OAAO,EAAER,WADkB;AAE3BS,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBZ,IAAAA;AADmB,GAAD;AAHK,CAAD,CAA5B;AAOA,eAAeS,KAAf","sourcesContent":["import data from \"./data\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { compose } from \"redux\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nconst initialState = [];\r\nconst dataReducer = createSlice({\r\n  name: \"datareducers\",\r\n  initialState,\r\n  reducers: {\r\n    datareducer: (state, action) => {\r\n      return data.products;\r\n    },\r\n  },\r\n});\r\nconst store = configureStore({\r\n  reducer: dataReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      thunk,\r\n    }),\r\n});\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}